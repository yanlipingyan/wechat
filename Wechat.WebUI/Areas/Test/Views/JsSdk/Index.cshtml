@{
    ViewBag.Title = "测试分享";
    Layout = "~/Views/Shared/_LayoutTest.cshtml";
}

<h2>测试分享</h2>

@*JSSDK使用步骤*@
@section scripts{

    @*步骤一：绑定域名*@
    @*先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。如果你使用了支付类接口，请确保支付目录在该安全域名下，否则将无法完成支付。
备注：登录后可在“开发者中心”查看对应的接口权限。*@

    @*步骤二：引入JS文件；备注：如需使用摇一摇周边功能，请引入 jweixin-1.1.0.js。支持使用 AMD/CMD 标准模块加载方法加载*@
    <script type="text/javascript" src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>
    <script type="text/javascript" src="http://res.wx.qq.com/open/js/jweixin-1.1.0.js"></script>

    <script type="text/javascript">

        var timestamp = '@Wechat.API.Common.GetTimeStamp()',//时间戳
            noncestr = '@Wechat.API.Common.GetNonceStr()',//随即串
            url = location.href;//当前页面路径

        $.post('@Url.Action("GetSign", "JsSdk", new { area = "Test" })', { timestamp: timestamp, nonceStr: noncestr, url: url }, function (sign) {

            //步骤三：通过config接口注入权限验证配置
            wx.config({
                debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
                appId: '@Wechat.API.Models.ApiModel.AppID', // 必填，公众号的唯一标识
                timestamp: timestamp, // 必填，生成签名的时间戳
                nonceStr: noncestr, // 必填，生成签名的随机串
                signature: sign,// 必填，签名，见附录1
                jsApiList: ['onMenuShareTimeline', 'onMenuShareAppMessage', 'onMenuShareQQ', 'onMenuShareWeibo', 'onMenuShareQZone', 'chooseImage', ' previewImage',
                    'uploadImage', 'downloadImage', 'startRecord', 'stopRecord', 'onVoiceRecordEnd', 'playVoice', 'pauseVoice', 'stopVoice', 'onVoicePlayEnd', 'uploadVoice',
                    'downloadVoice', 'translateVoice', 'getNetworkType', 'openLocation', 'getLocation', 'hideOptionMenu', 'showOptionMenu', 'closeWindow',
                    'hideMenuItems', 'showMenuItems', 'hideAllNonBaseMenuItem', 'showAllNonBaseMenuItem', 'scanQRCode', 'openProductSpecificView', 'startSearchBeacons',
                    'stopSearchBeacons'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
            });//'startSearchBeacons', 'stopSearchBeacons',摇一摇的两个

            //步骤四：通过ready接口处理成功验证
            wx.ready(function () {


                //判断当前客户端版本是否支持指定JS接口
                wx.checkJsApi({
                    jsApiList: ['onMenuShareTimeline', 'onMenuShareAppMessage', 'onMenuShareQQ', 'onMenuShareWeibo', 'onMenuShareQZone', 'chooseImage', ' previewImage',
                    'uploadImage', 'downloadImage', 'startRecord', 'stopRecord', 'onVoiceRecordEnd', 'playVoice', 'pauseVoice', 'stopVoice', 'onVoicePlayEnd', 'uploadVoice', 'downloadVoice',
                    'translateVoice', 'getNetworkType', 'openLocation', 'getLocation', 'hideOptionMenu', 'showOptionMenu', 'closeWindow', 'hideMenuItems', 'showMenuItems',
                    'hideAllNonBaseMenuItem', 'showAllNonBaseMenuItem', 'scanQRCode', 'openProductSpecificView', 'startSearchBeacons', 'stopSearchBeacons'], // 需要检测的JS接口列表，所有JS接口列表见附录2,
                    success: function (res) {
                        // 以键值对的形式返回，可用的api值true，不可用为false；如：{"checkResult":{"chooseImage":true},"errMsg":"checkJsApi:ok"}
                    }
                });


                //获取“分享到朋友圈”按钮点击状态及自定义分享内容接口
                wx.onMenuShareTimeline({
                    title: '测试分享到朋友圈', // 分享标题
                    link: 'http://www.liblog.cn/test/qrcode/index', // 分享链接
                    imgUrl: 'http://www.liblog.cn/Content/images/logo.png', // 分享图标
                    success: function () {
                        //用户确认分享后执行的回调函数
                    },
                    fail: function () {
                        //接口调用失败时执行的回调函数 
                    },
                    complete: function () {
                        //接口调用完成时执行的回调函数，无论成功或失败都会执行 
                    },
                    cancel: function () {
                        //用户取消分享后执行的回调函数
                    },
                    trigger: function () {
                        //监听Menu中的按钮点击时触发的方法，该方法仅支持Menu中的相关接口,不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
                    }
                });

                //获取“分享给朋友”按钮点击状态及自定义分享内容接口
                wx.onMenuShareAppMessage({
                    title: '测试分享给朋友', // 分享标题
                    desc: '分享给你，因为你是我的好朋友，好呀好朋友', // 分享描述
                    link: 'http://www.liblog.cn/test/qrcode/index', // 分享链接
                    imgUrl: 'http://www.liblog.cn/Content/images/logo.png', // 分享图标
                    type: 'link', // 分享类型,music、video或link，不填默认为link
                    dataUrl: '', // 如果type是music或video，则要提供数据链接，默认为空
                    success: function () {
                        // 用户确认分享后执行的回调函数
                    },
                    cancel: function () {
                        // 用户取消分享后执行的回调函数
                    }
                });

                //获取“分享到QQ”按钮点击状态及自定义分享内容接口
                wx.onMenuShareQQ({
                    title: '测试分享到QQ', // 分享标题
                    desc: '分享到我的QQ，其他人都可以看到', // 分享描述
                    link: 'http://www.liblog.cn/test/qrcode/index', // 分享链接
                    imgUrl: 'http://www.liblog.cn/Content/images/logo.png', // 分享图标
                    success: function () {
                        // 用户确认分享后执行的回调函数
                    },
                    cancel: function () {
                        // 用户取消分享后执行的回调函数
                    }
                });

                //获取“分享到腾讯微博”按钮点击状态及自定义分享内容接口
                wx.onMenuShareWeibo({
                    title: '测试分享到腾讯微博', // 分享标题
                    desc: '分享到我的腾讯微博，其他人都可以看到', // 分享描述
                    link: 'http://www.liblog.cn/test/qrcode/index', // 分享链接
                    imgUrl: 'http://www.liblog.cn/Content/images/logo.png', // 分享图标
                    success: function () {
                        // 用户确认分享后执行的回调函数
                    },
                    cancel: function () {
                        // 用户取消分享后执行的回调函数
                    }
                });

                //获取“分享到QQ空间”按钮点击状态及自定义分享内容接口
                wx.onMenuShareQZone({
                    title: '测试分享到QQ空间', // 分享标题
                    desc: '分享到我的QQ空间，其他人都可以看到', // 分享描述
                    link: 'http://www.liblog.cn/test/qrcode/index', // 分享链接
                    imgUrl: 'http://www.liblog.cn/Content/images/logo.png', // 分享图标
                    success: function () {
                        // 用户确认分享后执行的回调函数
                    },
                    cancel: function () {
                        // 用户取消分享后执行的回调函数
                    }
                });


                //拍照或从手机相册中选图接口
                wx.chooseImage({
                    count: 1, // 默认9
                    sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
                    sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
                    success: function (res) {
                        var localIds = res.localIds; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片
                    }
                });

                //预览图片接口
                wx.previewImage({
                    current: '', // 当前显示图片的http链接
                    urls: [] // 需要预览的图片http链接列表
                });

                //上传图片接口
                wx.uploadImage({
                    localId: '', // 需要上传的图片的本地ID，由chooseImage接口获得
                    isShowProgressTips: 1, // 默认为1，显示进度提示
                    success: function (res) {
                        var serverId = res.serverId; // 返回图片的服务器端ID
                    }
                });

                //下载图片接口
                wx.downloadImage({
                    serverId: '', // 需要下载的图片的服务器端ID，由uploadImage接口获得
                    isShowProgressTips: 1, // 默认为1，显示进度提示
                    success: function (res) {
                        var localId = res.localId; // 返回图片下载后的本地ID
                    }
                });


                //开始录音接口
                wx.startRecord();

                //停止录音接口
                wx.stopRecord({
                    success: function (res) {
                        var localId = res.localId;
                    }
                });

                //监听录音自动停止接口
                wx.onVoiceRecordEnd({
                    // 录音时间超过一分钟没有停止的时候会执行 complete 回调
                    complete: function (res) {
                        var localId = res.localId;
                    }
                });

                //播放语音接口
                wx.playVoice({
                    localId: '' // 需要播放的音频的本地ID，由stopRecord接口获得
                });


                //暂停播放接口
                wx.pauseVoice({
                    localId: '' // 需要暂停的音频的本地ID，由stopRecord接口获得
                });

                //停止播放接口
                wx.stopVoice({
                    localId: '' // 需要停止的音频的本地ID，由stopRecord接口获得
                });

                //监听语音播放完毕接口
                wx.onVoicePlayEnd({
                    success: function (res) {
                        var localId = res.localId; // 返回音频的本地ID
                    }
                });

                //上传语音接口
                //备注：上传语音有效期3天，可用微信多媒体接口下载语音到自己的服务器，此处获得的 serverId 即 media_id，参考文档 ../12/58bfcfabbd501c7cd77c19bd9cfa8354.html 目前多媒体文件下载接口的频率限制为10000次/天，如需要调高频率，请邮件weixin-open@qq.com,邮件主题为【申请多媒体接口调用量】，请对你的项目进行简单描述，附上产品体验链接，并对用户量和使用量进行说明。
                wx.uploadVoice({
                    localId: '', // 需要上传的音频的本地ID，由stopRecord接口获得
                    isShowProgressTips: 1, // 默认为1，显示进度提示
                    success: function (res) {
                        var serverId = res.serverId; // 返回音频的服务器端ID
                    }
                });

                //下载语音接口
                wx.downloadVoice({
                    serverId: '', // 需要下载的音频的服务器端ID，由uploadVoice接口获得
                    isShowProgressTips: 1, // 默认为1，显示进度提示
                    success: function (res) {
                        var localId = res.localId; // 返回音频的本地ID
                    }
                });


                //识别音频并返回识别结果接口
                wx.translateVoice({
                    localId: '', // 需要识别的音频的本地Id，由录音相关接口获得
                    isShowProgressTips: 1, // 默认为1，显示进度提示
                    success: function (res) {
                        alert(res.translateResult); // 语音识别的结果
                    }
                });


                //获取网络状态接口
                wx.getNetworkType({
                    success: function (res) {
                        var networkType = res.networkType; // 返回网络类型2g，3g，4g，wifi
                    }
                });


                //使用微信内置地图查看位置接口
                wx.openLocation({
                    latitude: 0, // 纬度，浮点数，范围为90 ~ -90
                    longitude: 0, // 经度，浮点数，范围为180 ~ -180。
                    name: '', // 位置名
                    address: '', // 地址详情说明
                    scale: 1, // 地图缩放级别,整形值,范围从1~28。默认为最大
                    infoUrl: '' // 在查看位置界面底部显示的超链接,可点击跳转
                });

                //获取地理位置接口
                wx.getLocation({
                    type: 'wgs84', // 默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02'
                    success: function (res) {
                        var latitude = res.latitude; // 纬度，浮点数，范围为90 ~ -90
                        var longitude = res.longitude; // 经度，浮点数，范围为180 ~ -180。
                        var speed = res.speed; // 速度，以米/每秒计
                        var accuracy = res.accuracy; // 位置精度
                    }
                });


                //开启查找周边ibeacon设备接口
                //备注：如需接入摇一摇周边功能，请参考：申请开通摇一摇周边
                wx.startSearchBeacons({
                    ticket: "",  //摇周边的业务ticket, 系统自动添加在摇出来的页面链接后面
                    complete: function (argv) {
                        //开启查找完成后的回调函数
                    }
                });


                //关闭查找周边ibeacon设备接口
                wx.stopSearchBeacons({
                    complete: function (res) {
                        //关闭查找完成后的回调函数
                    }
                });

                //监听周边ibeacon设备接口
                //备注：上述摇一摇周边接口使用注意事项及更多返回结果说明，请参考：摇一摇周边获取设备信息
                wx.onSearchBeacons({
                    complete: function (argv) {
                        //回调函数，可以数组形式取得该商家注册的在周边的相关设备列表
                    }
                });


                //隐藏右上角菜单接口
                wx.hideOptionMenu();

                //显示右上角菜单接口
                wx.showOptionMenu();

                //关闭当前网页窗口接口
                wx.closeWindow();

                //批量隐藏功能按钮接口
                wx.hideMenuItems({
                    menuList: [] // 要隐藏的菜单项，只能隐藏“传播类”和“保护类”按钮，所有menu项见附录3
                });

                //批量显示功能按钮接口
                wx.showMenuItems({
                    menuList: [] // 要显示的菜单项，所有menu项见附录3
                });

                //隐藏所有非基础按钮接口
                wx.hideAllNonBaseMenuItem();// “基本类”按钮详见附录3

                //显示所有功能按钮接口
                wx.showAllNonBaseMenuItem();


                //调起微信扫一扫接口
                wx.scanQRCode({
                    needResult: 0, // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，
                    scanType: ["qrCode", "barCode"], // 可以指定扫二维码还是一维码，默认二者都有
                    success: function (res) {
                        var result = res.resultStr; // 当needResult 为 1 时，扫码返回的结果
                    }
                });


                //跳转微信商品页接口
                wx.openProductSpecificView({
                    productId: '', // 商品id
                    viewType: '' // 0.默认值，普通商品详情页1.扫一扫商品详情页2.小店商品详情页
                });
            });

            //步骤五：通过error接口处理失败验证
            wx.error(function () {
            });
        })
    </script>
}